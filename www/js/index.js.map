{"version":3,"sources":["webpack:///webpack/bootstrap 5d7fa3034e2882ac070c","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/toolkit.js","webpack:///./js/core/sudoku.js","webpack:///./js/core/generator.js","webpack:///./js/core/checker.js","webpack:///./js/ui/popupnumbers.js","webpack:///./js/core/count.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gCAA+B;;AAE/B;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;;;;;;;;;ACnFD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAkC,MAAM;AACxC,8CAA6C,UAAU;AACvD,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,G;;;;;;ACvHA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,4BAA2B,YAAY;AACvC,MAAK;;AAEL;AACA;AACA,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,G;;;;;;AC/EA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,G;;;;;;ACtBA;AACA;AACA,QAAO,SAAS;;AAEhB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,G;;;;;;AC1DA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,QAAO,MAAM;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C;AACA;;AAEA,mCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C;AACA,mCAAkC,cAAc;AAChD;AACA;;AAEA;AACA,mCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C;AACA;AACA,oCAAmC,eAAe;AAClD;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACvGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA,0BAAyB,KAAK;AAC9B,yBAAwB,IAAI;AAC5B,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,G;;;;;;;AC1DA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5d7fa3034e2882ac070c","const Grid = require(\"./ui/grid\");\r\nconst PopupNumbers = require(\"./ui/popupnumbers\");\r\nconst Count = require(\"./core/count\");\r\n\r\nconst grid = new Grid($(\"#container\"));\r\ngrid.build();\r\ngrid.layout();\r\n\r\nconst count = new Count();\r\ncount.onload();\r\n\r\nconst popupNumbers = new PopupNumbers($(\"#popupNumbers\"));\r\ngrid.bindPopup(popupNumbers);\r\n\r\nvar checktime = 0;\r\n$(\"#check\").on(\"click\", e => {\r\n    popupNumbers.hide();\r\n    checktime++;\r\n    console.log(\"checktime:\", checktime);\r\n    if (grid.check()) {\r\n        count.timer_cease();\r\n        alert(\"Congruations!\");\r\n        \r\n        //获取名字\r\n        var names = null;\r\n        names = prompt(\"intput your name\");\r\n        console.log('names', names);\r\n        $(\"#upload_name\").attr(\"value\", names);\r\n        console.log(\"input name:\", $(\"#upload_name\").attr(\"value\"));\r\n        \r\n        var stringtime = [];\r\n        stringtime += $(\"#count_h\")[0].innerHTML + \":\" + $(\"#count_m\")[0].innerHTML + \":\" + $(\"#count_s\")[0].innerHTML;\r\n        console.log(typeof stringtime);\r\n        console.log('h:m:s ->', stringtime);\r\n        \r\n        $(\"#upload_time\").attr(\"value\", stringtime);\r\n        console.log(\"upload_time\", $(\"#upload_time\").attr(\"value\"));\r\n        console.log(\"lenth:\", stringtime.length);\r\n        \r\n        $(\"#upload_checktime\").attr(\"value\", checktime);\r\n        console.log(\"upload_checktime\", $(\"#upload_checktime\").attr(\"value\"));\r\n        \r\n        var score = 80 + Math.random() * 20 - Math.random() * 2 - checktime;\r\n        $(\"#upload_score\").attr(\"value\", Math.floor(score));\r\n        console.log(\"upload_score\", $(\"#upload_score\").attr(\"value\"));\r\n        \r\n        $(\"#s_submit\").click();//提交\r\n\r\n        checktime = 0;\r\n        stringtime = null;\r\n     }\r\n});\r\n\r\n$(\"#reset\").on(\"click\", e => {\r\n    popupNumbers.hide();\r\n    grid.reset();\r\n});\r\n\r\n$(\"#clear\").on(\"click\", e => {\r\n    popupNumbers.hide();\r\n    grid.clear();\r\n});\r\n\r\n$(\"#rebuild\").on(\"click\", e => {\r\n    popupNumbers.hide();\r\n    grid.rebuild();\r\n    count.stop();\r\n    count.onload();\r\n});\r\n\r\n\r\n$(function () {\r\n    $.get('http://localhost:3000/', function (data) {\r\n        for (let list of data) {\r\n            let table = '<tr class=\"tbd\"><td>';\r\n            let s = '</td><td>';\r\n            for (let ele of list) {\r\n                table += (ele + s);\r\n            }\r\n            table += '</td></tr>';\r\n            $(\"#tab\").append(table);\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","//生成九宫格\r\nconst Toolkit = require(\"../core/toolkit\");\r\nconst Sudoku = require(\"../core/sudoku\");\r\nconst Checker = require(\"../core/checker\");\r\n\r\nmodule.exports = class Grid {\r\n    constructor(container) {\r\n        this._$container = container;\r\n    }\r\n\r\n    build() {\r\n        const sudoku = new Sudoku();\r\n        sudoku.make();\r\n        const matrix = sudoku.puzzleMatrix;\r\n\r\n        const rowGroupClasses = [\"row_g_top\", \"row_g_middle\", \"row_g_bottom\"];\r\n        const colGroupClasses = [\"col_g_left\", \"col_g_center\", \"col_g_right\"];\r\n\r\n        const $cells = matrix.map(rowValues => rowValues\r\n            .map((cellValue, colIndex) => {\r\n                return $(\"<span>\")\r\n                    .addClass(colGroupClasses[colIndex % 3])\r\n                    .addClass(cellValue ? \"fixed\" : \"empty\")\r\n                    .text(cellValue);\r\n            }));\r\n\r\n        const $divArrary = $cells.map(($spanArray, rowIndex) => {\r\n            return $(\"<div>\")\r\n                .addClass(\"row\")\r\n                .addClass(rowGroupClasses[rowIndex % 3])\r\n                .append($spanArray);\r\n        });\r\n\r\n        this._$container.append($divArrary);\r\n    }\r\n\r\n    layout() {\r\n        const width = $(\"span:first\", this._$container).width();\r\n        $(\"span\", this._$container)\r\n            .height(width)\r\n            .css({\r\n                \"line-height\": `${width}px`,\r\n                \"font-size\": width < 32 ? `${width / 2}px` : \"\"\r\n            });\r\n    }\r\n\r\n    bindPopup(popupNumbers) {\r\n        this._$container.on(\"click\", \"span\", e => {\r\n            const $cell = $(e.target);\r\n            if ($cell.is(\".fixed\")) {\r\n                return;\r\n            }\r\n            popupNumbers.popup($cell);\r\n        });\r\n    }\r\n\r\n    //检查用户的结果，错误则进行标记\r\n    check() {\r\n        //获取需要检查的数据\r\n        const $rows = this._$container.children();\r\n        const data = $rows\r\n            .map((rowIndex, div) => {\r\n                return $(div).children()\r\n                    .map((colIndex, span) => parseInt($(span).text()) || 0);\r\n            })\r\n            .toArray()\r\n            .map($data => $data.toArray());\r\n\r\n        console.log(data);\r\n\r\n        const checker = new Checker(data);\r\n        //检查成功\r\n        if (checker.check()) {\r\n            return true;\r\n        }\r\n\r\n        //检查不成功\r\n        const marks = checker.matrixMarks;\r\n        this._$container.children()\r\n            .each((rowIndex, div) => {\r\n                $(div).children().each((colIndex, span) => {\r\n                    const $span = $(span);\r\n                    if ($span.is(\".fixed\") || marks[rowIndex][colIndex]) {\r\n                        $span.removeClass(\"error\");\r\n                    } else {\r\n                        $(span).addClass(\"error\");\r\n                    }\r\n                })\r\n            })\r\n    }\r\n\r\n    //重置键盘到初始状态\r\n    reset() {\r\n        this._$container.find(\"span:not(.fixed)\")\r\n            .removeClass(\"error mark1 mark2\")\r\n            .addClass(\"empty\")\r\n            .text(0);\r\n    }\r\n\r\n    //清理错误表示\r\n    clear() {\r\n        this._$container.find(\"span.error\")\r\n            .removeClass(\"error\");\r\n        this._$container.find(\"span.mark1\")\r\n            .removeClass(\"mark1\");\r\n        this._$container.find(\"span.mark2\")\r\n            .removeClass(\"mark2\");\r\n        \r\n    }\r\n\r\n    //重新建立新的迷盘\r\n    rebuild() {\r\n        this._$container.empty();\r\n        this.build();\r\n        this.layout();\r\n    }\r\n\r\n    \r\n\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/grid.js\n// module id = 1\n// module chunks = 0","//矩阵和数组工具\r\nconst matrixToolkit = {\r\n\r\n    makeRow(v = 0) {\r\n        const array = new Array(9);\r\n        array.fill(v);\r\n        return array;\r\n    },\r\n\r\n    makeMatrix(v = 0) {\r\n        return Array.from({ length: 9 }, () => this.makeRow(v))\r\n    },\r\n\r\n    shuffle(array) {\r\n        const endIndex = array.length - 2;\r\n        for (let i = 0; i <= endIndex; i++) {\r\n            const j = (i + Math.floor(Math.random() * (array.length - i)));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    },\r\n\r\n    //检查指定位置可以填写\r\n    checkFillable(matrix, n, rowIndex, colIndex) {\r\n        const row = matrix[rowIndex];\r\n        const column = this.makeRow().map((v, i) => matrix[i][colIndex]);\r\n        const { boxIndex } = boxToolkit.convertToBoxIndex(rowIndex, colIndex);\r\n        const box = boxToolkit.getBoxcells(matrix, boxIndex);\r\n        for (let i = 0; i < 9; i++) {\r\n            if (row[i] === n || column[i] === n || box[i] === n) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n//宫坐标系工具\r\nconst boxToolkit = {\r\n\r\n    getBoxcells(matrix, boxIndex) {\r\n        const startRowIndex = Math.floor(boxIndex / 3) * 3;\r\n        const startColIndex = boxIndex % 3 * 3;\r\n        const result = [];\r\n        for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\r\n            const rowIndex = startRowIndex + Math.floor(cellIndex / 3);\r\n            const colIndex = startColIndex + cellIndex % 3;\r\n            result.push(matrix[rowIndex][colIndex]);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    convertToBoxIndex(rowIndex, colIndex) {\r\n        return {\r\n            boxIndex: Math.floor(rowIndex / 3) * 3 + Math.floor(colIndex / 3),\r\n            cellIndex: rowIndex % 3 * 3 + colIndex % 3\r\n        };\r\n    },\r\n\r\n    convertFromBoxIndex(boxIndex, cellIndex) {\r\n        return {\r\n            rowIndex: Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\r\n            colIndex: boxIndex % 3 * 3 + cellIndex % 3\r\n        };\r\n    }\r\n\r\n};\r\n\r\n//工具集\r\nmodule.exports = class Toolkit {\r\n    //矩阵和数组相关的工具\r\n    static get matrix() {\r\n        return matrixToolkit;\r\n    }\r\n\r\n    //宫坐标系相关的工具\r\n    static get box() {\r\n        return boxToolkit;\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/toolkit.js\n// module id = 2\n// module chunks = 0","//生成数独游戏\r\n\r\n//1.生成完成的解决方案：generator\r\n//2.随机去除部分数据，按比例\r\n\r\nconst Generator = require(\"./generator\");\r\n\r\nmodule.exports = class Sudoku {\r\n\r\n    constructor() {\r\n        const generator = new Generator();\r\n        generator.generate();\r\n        this.solutionMatrix = generator.matrix;\r\n    }\r\n\r\n    make(level = 5) {\r\n        //const shuldRid = Math.random() * 9 < level;\r\n        //生成迷盘\r\n        this.puzzleMatrix = this.solutionMatrix.map(row => {\r\n            return row.map(cell => Math.random() * 9 < level ? 0 : cell);\r\n        });\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/sudoku.js\n// module id = 3\n// module chunks = 0","//生成数组解决方案脚本\r\nconst Toolkit = require(\"./toolkit\");\r\nconst { matrix } = require(\"./toolkit\");\r\n\r\nmodule.exports = class Generator {\r\n\r\n    generate() {\r\n        while (!this.internalgenerate()) {\r\n            console.warn(\"try again!\");\r\n        }\r\n    }\r\n\r\n    internalgenerate() {\r\n        this.matrix = Toolkit.matrix.makeMatrix();\r\n        this.orders = Toolkit.matrix.makeMatrix()\r\n            .map(row => row.map((v, i) => i))\r\n            .map(row => Toolkit.matrix.shuffle(row));\r\n\r\n        for (let n = 1; n <= 9; n++) {\r\n            if (!this.fillNumber(n)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    fillNumber(n) {\r\n        return this.fillRow(n, 0);\r\n    }\r\n\r\n    fillRow(n, rowIndex) {\r\n        if (rowIndex > 8) {\r\n            return true;\r\n        }\r\n\r\n        const row = this.matrix[rowIndex];\r\n        const orders = this.orders[rowIndex];\r\n        for (let i = 0; i < 9; i++) {\r\n            const colIndex = orders[i];\r\n            //已经填写值\r\n            if (row[colIndex]) {\r\n                continue;\r\n            }\r\n            //检查这个位置是否可以填写 n\r\n            if (!Toolkit.matrix.checkFillable(this.matrix, n, rowIndex, colIndex)) {\r\n                continue;\r\n            }\r\n            row[colIndex] = n;\r\n            //在下一行填写 n ，如果没有填写进去，就继续当前行的下一个位置\r\n            if (!this.fillRow(n, rowIndex + 1)) {\r\n                row[colIndex] = 0;\r\n                continue;\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/generator.js\n// module id = 4\n// module chunks = 0","//检查数独的解决方案\r\nfunction checkArray(array) {\r\n    const length = array.length;\r\n    const marks = new Array(length)\r\n    marks.fill(true);\r\n\r\n    for (let i = 0; i < length - 1; i++) {\r\n        //如果已经标记过则跳过\r\n        if (!marks[i]) {\r\n            continue;\r\n        }\r\n\r\n        const v = array[i];\r\n        //是否有效，0 -> 无效，1-9 -> 有效\r\n        if (!v) {\r\n            marks[i] = false;\r\n            continue;\r\n        }\r\n        //是否有重复，i + 1 - 9 是否和 i 的位置有重复\r\n        for (let j = i + 1; j < length; j++) {\r\n            if (v === array[j]) {\r\n                marks[i] = marks[j] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return marks;\r\n}\r\n\r\n\r\nconst Toolkit = require(\"./toolkit\");\r\nconst { box } = require(\"./toolkit\");\r\n\r\n//输入 matrix，用户完成的数独数据 9 * 9\r\n//处理：对 matrix 行、列、宫进行检查，并填写 marks\r\n//输出：检查是否成功、marks\r\nmodule.exports = class Checker {\r\n\r\n    constructor(matrix) {\r\n        this._matrix = matrix;\r\n        this._matrixMarks = Toolkit.matrix.makeMatrix(true);\r\n    }\r\n\r\n    get matrixMarks() {\r\n        return this._matrixMarks;\r\n    }\r\n\r\n    get isSuccess(){\r\n        return this._success;\r\n    }\r\n\r\n    check() {\r\n        this.checkRows();\r\n        this.checkCols();\r\n        this.checkBoxes();\r\n\r\n        //检查是否成功\r\n        //Array.prototype.every()\r\n        this._success = this._matrixMarks.every(row => row.every(mark => mark));\r\n        return this._success;\r\n    }\r\n\r\n    checkRows() {\r\n        for (let rowIndex = 0; rowIndex < 9; rowIndex++) {\r\n            const row = this._matrix[rowIndex];\r\n            const marks = checkArray(row);\r\n\r\n            for (let colIndex = 0; colIndex < marks.length; colIndex++) {\r\n                if (!marks[colIndex]) {\r\n                    this._matrixMarks[rowIndex][colIndex] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkCols() {\r\n        for (let colIndex = 0; colIndex < 9; colIndex++) {\r\n            const cols = [];\r\n            for (let rowIndex = 0; rowIndex < 9; rowIndex++) {\r\n                cols[rowIndex] = this._matrix[rowIndex][colIndex];\r\n            }\r\n\r\n            const marks = checkArray(cols);\r\n            for (let rowIndex = 0; rowIndex < marks.length; rowIndex++) {\r\n                if (!marks[rowIndex]) {\r\n                    this._matrixMarks[rowIndex][colIndex] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkBoxes() {\r\n        for (let boxIndex = 0; boxIndex < 9; boxIndex++) {\r\n            const boxes = Toolkit.box.getBoxcells(this._matrix, boxIndex);\r\n            const marks = checkArray(boxes);\r\n            for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\r\n                if (!marks[cellIndex]) {\r\n                    const { rowIndex, colIndex } = Toolkit.box.convertFromBoxIndex(boxIndex, cellIndex);\r\n                    this._matrixMarks[rowIndex][colIndex] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/checker.js\n// module id = 5\n// module chunks = 0","//处理弹出的操作面板\r\n//cell -- (click) --> popup\r\n//popup -- (click) --> n --> (fill) -->cell\r\n\r\n\r\nmodule.exports = class PopupNumbers {\r\n    constructor($panel) {\r\n        this._$panel = $panel.hide().removeClass(\"hidden\");\r\n\r\n        $(\".title\").on(\"click\",e=>{\r\n            this.hide();\r\n        });\r\n\r\n        this._$panel.on(\"click\", \"span\", e => {\r\n            const $cell = this._$targetCell;\r\n            const $span = $(e.target);\r\n\r\n            if ($span.hasClass(\"mark1\")) {\r\n                //mark1回填样式\r\n                if ($cell.hasClass(\"mark1\")) {\r\n                    $cell.removeClass(\"mark1\");\r\n                } else {\r\n                    $cell.removeClass(\"mark2\")\r\n                        .addClass(\"mark1\");\r\n                }\r\n            } else if ($span.hasClass(\"mark2\")) {\r\n                if ($cell.hasClass(\"mark2\")) {\r\n                    $cell.removeClass(\"mark2\");\r\n                } else {\r\n                    $cell.removeClass(\"mark1\")\r\n                        .addClass(\"mark2\");\r\n                }\r\n            } else if ($span.hasClass(\"empty\")) {\r\n                //empty，取消数字填写，取消mark\r\n                $cell.text(0)\r\n                    .addClass(\"empty\");\r\n            } else {\r\n                //1-9回填数字\r\n                $cell.removeClass(\"empty\")\r\n                    .text($span.text());\r\n            }\r\n            this.hide();\r\n        });\r\n    }\r\n\r\n    popup($cell) {\r\n        this._$targetCell = $cell;\r\n        const { left, top } = $cell.position();\r\n        this._$panel\r\n            .css({\r\n                left: `${left}px`,\r\n                top: `${top}px`\r\n            })\r\n            .show();\r\n    }\r\n\r\n    hide() {\r\n        this._$panel.hide();\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/popupnumbers.js\n// module id = 6\n// module chunks = 0","\r\nvar ctimer = null;\r\nvar num = 0;\r\n\r\nmodule.exports = class Count {\r\n\r\n    onload() {\r\n        if (ctimer) {\r\n            clearInterval(ctimer);\r\n            ctimer = null;\r\n            num = 0;\r\n        }\r\n        ctimer = setInterval(() => {\r\n            num++;\r\n            console.log(num);\r\n            // $(\"#id\")是jQuery对象，没有innerHTML属性,innerHTML是原生属性，加上$(\"#id\")[0]转换成原生属性\r\n            $(\"#count_s\")[0].innerHTML = this.show_num(num % 60);\r\n            $(\"#count_m\")[0].innerHTML = this.show_num(parseInt(Math.floor(num / 60) % 60));\r\n            $(\"#count_h\")[0].innerHTML = this.show_num(parseInt(Math.floor(num / 60) / 60));\r\n        }, 1000)\r\n    }\r\n\r\n    stop() {\r\n        console.log(\"Innerstopnum\", ctimer);\r\n        clearInterval(ctimer);\r\n        ctimer = null;\r\n        num = 0;\r\n        $(\"#count_s\")[0].innerHTML = \"00\";\r\n        $(\"#count_m\")[0].innerHTML = \"00\";\r\n        $(\"#count_h\")[0].innerHTML = \"00\";\r\n    }\r\n\r\n    timer_cease() {\r\n        console.log(\"Innerstopnum\", ctimer);\r\n        clearInterval(ctimer);\r\n        ctimer = null;\r\n        $(\"#count_s\")[0].innerHTML = this.show_num(num % 60);;\r\n        $(\"#count_m\")[0].innerHTML = this.show_num(parseInt(Math.floor(num / 60) % 60));;\r\n        $(\"#count_h\")[0].innerHTML = this.show_num(parseInt(Math.floor(num / 60) / 60));\r\n        num = 0;\r\n    }\r\n\r\n    show_num(n) {\r\n        if (n < 10) {\r\n            return '0' + n;\r\n        }\r\n        return n;\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/count.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}